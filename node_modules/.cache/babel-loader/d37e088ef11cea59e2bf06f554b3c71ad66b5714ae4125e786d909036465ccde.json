{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shoaib Farooka\\\\Desktop\\\\AI_Bot_Project\\\\web-bot\\\\src\\\\Components\\\\Loader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../Styles/Loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingSpinner(_ref) {\n  _s();\n  let {\n    isSuccessful,\n    isFailed\n  } = _ref;\n  const [timer, setTimer] = useState(10);\n  useEffect(() => {\n    let interval;\n    if (isSuccessful || isFailed) {\n      interval = setInterval(() => {\n        setTimer(timer => timer - 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isSuccessful, isFailed]);\n  if (isSuccessful) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: \"\\u2714\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-para\",\n        children: \"Form submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-para2\",\n        children: [\"We are redirecting you back to page in \", timer, \" seconds....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else if (isFailed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"failure-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-icon\",\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-para\",\n        children: \"Sorry! We are unable to record your response. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-para2\",\n        children: [\"We are redirecting you back to page in \", timer, \" seconds....\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-cotainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Loading-para\",\n          children: \"Please wait while we are gathering data....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LoadingSpinner, \"7/CuL3fOJ1h5uo1LrGhwo9COhGs=\");\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LoadingSpinner","_ref","_s","isSuccessful","isFailed","timer","setTimer","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shoaib Farooka/Desktop/AI_Bot_Project/web-bot/src/Components/Loader.js"],"sourcesContent":["import React, {useEffect,useState} from \"react\";\r\nimport \"../Styles/Loader.css\";\r\n\r\nfunction LoadingSpinner({ isSuccessful, isFailed }) {\r\n    const [timer, setTimer] = useState(10);\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isSuccessful || isFailed) {\r\n            interval = setInterval(() => {\r\n                setTimer((timer) => timer - 1);\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isSuccessful, isFailed]);\r\n    if (isSuccessful) {\r\n        return (\r\n            <div className=\"success-container\">\r\n                <div className=\"success-icon\">&#10004;</div>\r\n                <div className=\"success-para\">Form submitted successfully!</div>\r\n                <div className=\"success-para2\">We are redirecting you back to page in {timer} seconds....</div>\r\n            </div>\r\n        );\r\n    } else if (isFailed) {\r\n        return (\r\n\r\n            <div className=\"failure-container\">\r\n                <div className=\"failure-icon\">&#10060;</div>\r\n                <div className=\"failure-para\">Sorry! We are unable to record your response. Please try again.</div>\r\n                <div className=\"failure-para2\">We are redirecting you back to page in {timer} seconds....</div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"loader-cotainer\">\r\n                <div className=\"spinner-container\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <div className=\"Loading-para\">\r\n                        Please wait while we are gathering data....\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}