{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shoaib Farooka\\\\Desktop\\\\AI_Bot_Project\\\\web-bot\\\\src\\\\Components\\\\Loader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../Styles/Loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingSpinner(_ref) {\n  _s();\n  let {\n    isSuccessful,\n    isFailed\n  } = _ref;\n  useEffect(() => {\n    if (isSuccessful || isFailed) {\n      const timeoutId = setTimeout(() => {\n        // Reset the loader after 5 seconds\n        setIsSuccessful(false);\n        setIsFailed(false);\n      }, 5000);\n\n      // Clean up the timeout when the component unmounts or re-renders\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isSuccessful, isFailed]);\n  if (isSuccessful) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-icon\",\n        children: \"\\u2714\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-para\",\n        children: \"Form submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-para2\",\n        children: \"We are redirecting you back to form....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else if (isFailed) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"failure-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-icon\",\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-para\",\n        children: \"Sorry! We are unable to record your response. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"failure-para2\",\n        children: \"We are redirecting you back to form....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-cotainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Loading-para\",\n          children: \"Please wait while we are gathering data....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LoadingSpinner, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","_ref","_s","isSuccessful","isFailed","useEffect","timeoutId","setTimeout","setIsSuccessful","setIsFailed","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shoaib Farooka/Desktop/AI_Bot_Project/web-bot/src/Components/Loader.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../Styles/Loader.css\";\r\n\r\nfunction LoadingSpinner({ isSuccessful, isFailed }) {\r\n    useEffect(() => {\r\n        if (isSuccessful || isFailed) {\r\n            const timeoutId = setTimeout(() => {\r\n                // Reset the loader after 5 seconds\r\n                setIsSuccessful(false);\r\n                setIsFailed(false);\r\n            }, 5000);\r\n\r\n            // Clean up the timeout when the component unmounts or re-renders\r\n            return () => clearTimeout(timeoutId);\r\n        }\r\n    }, [isSuccessful, isFailed]);\r\n    \r\n    if (isSuccessful) {\r\n        return (\r\n            <div className=\"success-container\">\r\n                <div className=\"success-icon\">&#10004;</div>\r\n                <div className=\"success-para\">Form submitted successfully!</div>\r\n                <div className=\"success-para2\">We are redirecting you back to form....</div>\r\n            </div>\r\n        );\r\n    } else if (isFailed) {\r\n        return (\r\n\r\n            <div className=\"failure-container\">\r\n                <div className=\"failure-icon\">&#10060;</div>\r\n                <div className=\"failure-para\">Sorry! We are unable to record your response. Please try again.</div>\r\n                <div className=\"failure-para2\">We are redirecting you back to form....</div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"loader-cotainer\">\r\n                <div className=\"spinner-container\">\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <div className=\"Loading-para\">\r\n                        Please wait while we are gathering data....\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5B;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC9CI,SAAS,CAAC,MAAM;IACZ,IAAIF,YAAY,IAAIC,QAAQ,EAAE;MAC1B,MAAME,SAAS,GAAGC,UAAU,CAAC,MAAM;QAC/B;QACAC,eAAe,CAAC,KAAK,CAAC;QACtBC,WAAW,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,OAAO,MAAMC,YAAY,CAACJ,SAAS,CAAC;IACxC;EACJ,CAAC,EAAE,CAACH,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAE5B,IAAID,YAAY,EAAE;IACd,oBACIJ,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9Bb,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CjB,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChEjB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAEd,CAAC,MAAM,IAAIZ,QAAQ,EAAE;IACjB,oBAEIL,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9Bb,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CjB,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA+D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnGjB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAEd,CAAC,MAAM;IACH,oBACIjB,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5Bb,OAAA;QAAKY,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9Bb,OAAA;UAAKY,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvCjB,OAAA;UAAKY,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAE9B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAACd,EAAA,CA3CQF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA6CvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}